<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fresh.manager.mapper.shop.AttributeMapper">
  <resultMap id="BaseResultMap" type="com.fresh.manager.pojo.shop.Attribute">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attribute_category_id" jdbcType="INTEGER" property="attributeCategoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="input_type" jdbcType="BIT" property="inputType" />
    <result column="sort_order" jdbcType="TINYINT" property="sortOrder" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fresh.manager.pojo.shop.Attribute">
    <result column="value" jdbcType="LONGVARCHAR" property="value" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, attribute_category_id, name, input_type, sort_order
  </sql>
  <sql id="Blob_Column_List">
    value
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fresh.manager.pojo.shop.AttributeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fresh.manager.pojo.shop.AttributeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_attribute
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nideshop_attribute
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fresh.manager.pojo.shop.AttributeExample">
    delete from nideshop_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fresh.manager.pojo.shop.Attribute">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_attribute (attribute_category_id, name, input_type, 
      sort_order, value)
    values (#{attributeCategoryId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{inputType,jdbcType=BIT}, 
      #{sortOrder,jdbcType=TINYINT}, #{value,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fresh.manager.pojo.shop.Attribute">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_attribute
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="attributeCategoryId != null">
        attribute_category_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="inputType != null">
        input_type,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="value != null">
        value,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="attributeCategoryId != null">
        #{attributeCategoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null">
        #{inputType,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="value != null">
        #{value,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fresh.manager.pojo.shop.AttributeExample" resultType="java.lang.Long">
    select count(*) from nideshop_attribute
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_attribute
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.attributeCategoryId != null">
        attribute_category_id = #{record.attributeCategoryId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.inputType != null">
        input_type = #{record.inputType,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=TINYINT},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nideshop_attribute
    set id = #{record.id,jdbcType=INTEGER},
      attribute_category_id = #{record.attributeCategoryId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      input_type = #{record.inputType,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=TINYINT},
      value = #{record.value,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_attribute
    set id = #{record.id,jdbcType=INTEGER},
      attribute_category_id = #{record.attributeCategoryId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      input_type = #{record.inputType,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fresh.manager.pojo.shop.Attribute">
    update nideshop_attribute
    <set>
      <if test="attributeCategoryId != null">
        attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="inputType != null">
        input_type = #{inputType,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=TINYINT},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fresh.manager.pojo.shop.Attribute">
    update nideshop_attribute
    set attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      input_type = #{inputType,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=TINYINT},
      value = #{value,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fresh.manager.pojo.shop.Attribute">
    update nideshop_attribute
    set attribute_category_id = #{attributeCategoryId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      input_type = #{inputType,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  
  
  <resultMap id="BaseResultMap2" type="com.fresh.manager.pojo.shop.Attribute">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="attribute_category_id" jdbcType="INTEGER" property="attributeCategoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="input_type" jdbcType="BIT" property="inputType" />
    <result column="sort_order" jdbcType="TINYINT" property="sortOrder" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  
  
  <select id="queryList" parameterType="com.fresh.manager.pojo.shop.Attribute" resultMap="BaseResultMap2">
        select u.*, d.name as category_name from nideshop_attribute u left join nideshop_attribute_category d on  u.attribute_category_id = d.id
        <where>
        	 <if test="name != null and name.trim() != ''">
            	AND u.name LIKE concat('%', #{name},'%')
	        </if>
	        <if test="categoryName != null and categoryName.trim() != ''">
	            AND d.name LIKE concat('%', #{categoryName},'%')
	        </if>
	        <if test="attributeCategoryId != null and attributeCategoryId.trim() != ''">
	            AND u.attribute_category_id = #{attributeCategoryId}
	        </if>
		</where>
		order by u.id desc
    </select>
    
     <select id="queryTotal" parameterType="com.fresh.manager.pojo.shop.Attribute" resultType="int">
        select count(1) from nideshop_attribute u left join nideshop_attribute_category d on  u.attribute_category_id = d.id
        <where>
         <if test="name != null and name.trim() != ''">
            	AND u.name LIKE concat('%', #{name},'%')
	        </if>
	        <if test="categoryName != null and categoryName.trim() != ''">
	            AND d.name LIKE concat('%', #{categoryName},'%')
	        </if>
	        <if test="attributeCategoryId != null and attributeCategoryId.trim() != ''">
	            AND u.attribute_category_id = #{attributeCategoryId}
	        </if>
        </where>
    </select>
</mapper>