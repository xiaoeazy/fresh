<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fresh.manager.mapper.shop.GroupMapper">
  <resultMap id="BaseResultMap" type="com.fresh.manager.pojo.shop.Group">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="group_sn" jdbcType="VARCHAR" property="groupSn" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fresh.manager.pojo.shop.Group">
    <result column="group_desc" jdbcType="LONGVARCHAR" property="groupDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, group_name, group_sn, is_delete, create_user_id, create_time
  </sql>
  <sql id="Blob_Column_List">
    group_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fresh.manager.pojo.shop.GroupExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fresh.manager.pojo.shop.GroupExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nideshop_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fresh.manager.pojo.shop.GroupExample">
    delete from nideshop_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fresh.manager.pojo.shop.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_group (group_name, group_sn, is_delete, 
      create_user_id, create_time, group_desc
      )
    values (#{groupName,jdbcType=VARCHAR}, #{groupSn,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}, 
      #{createUserId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{groupDesc,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.fresh.manager.pojo.shop.Group">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_group
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupName != null">
        group_name,
      </if>
      <if test="groupSn != null">
        group_sn,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="groupDesc != null">
        group_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupName != null">
        #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupSn != null">
        #{groupSn,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupDesc != null">
        #{groupDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fresh.manager.pojo.shop.GroupExample" resultType="java.lang.Long">
    select count(*) from nideshop_group
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_group
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.groupName != null">
        group_name = #{record.groupName,jdbcType=VARCHAR},
      </if>
      <if test="record.groupSn != null">
        group_sn = #{record.groupSn,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.groupDesc != null">
        group_desc = #{record.groupDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nideshop_group
    set id = #{record.id,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      group_sn = #{record.groupSn,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      group_desc = #{record.groupDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_group
    set id = #{record.id,jdbcType=INTEGER},
      group_name = #{record.groupName,jdbcType=VARCHAR},
      group_sn = #{record.groupSn,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fresh.manager.pojo.shop.Group">
    update nideshop_group
    <set>
      <if test="groupName != null">
        group_name = #{groupName,jdbcType=VARCHAR},
      </if>
      <if test="groupSn != null">
        group_sn = #{groupSn,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="groupDesc != null">
        group_desc = #{groupDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fresh.manager.pojo.shop.Group">
    update nideshop_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      group_sn = #{groupSn,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      group_desc = #{groupDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fresh.manager.pojo.shop.Group">
    update nideshop_group
    set group_name = #{groupName,jdbcType=VARCHAR},
      group_sn = #{groupSn,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
  <resultMap type="com.fresh.manager.pojo.shop.Group" id="groupGoodsMap">
         <id column="id" jdbcType="INTEGER" property="id" />
		    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
		    <result column="group_sn" jdbcType="VARCHAR" property="groupSn" />
		    <result column="is_delete" jdbcType="BIT" property="isDelete" />
		    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
		    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	    <result column="group_desc" jdbcType="LONGVARCHAR" property="groupDesc" />
	     
        <collection property="goodsList" ofType="com.fresh.manager.pojo.shop.Goods" column="id">
			<id column="gid" property="id"/><!-- 这里的column对应的是下面查询的别名，而不是表字段名 -->
	        <result property="name" column="name"/>
	        <result column="primary_pic_url" jdbcType="VARCHAR" property="primaryPicUrl" />
	        <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
		</collection>
    </resultMap>
    
    
     <!-- 以下为自己添加 -->
  <select id="queryListWithGoods"  resultMap="groupGoodsMap">
		select
    		a.`id`,
    		a.`group_name`,
    		a.`group_sn`,
    		a.`group_desc`,
    		a.`create_user_id`,
    		a.`create_time`,
    		c.`id` as gid,
			c.`name`,
			c.`primary_pic_url`
			
		from nideshop_group_goods b
		left join  nideshop_group a  
		on b.group_id = a.id 
		left join  nideshop_goods c 
		on b.goods_id = c.id 
		<where>
			<if test="groupName != null and groupName.trim() != ''">
				AND a.group_name LIKE concat('%',#{groupName},'%')
			</if>
			<if test="isDelete != null and isDelete != ''">
				AND a.is_delete = #{isDelete}
			</if>
		</where>
        order by a.id desc
	</select>
	
	<select id="queryWithGoodsByGroupId" parameterType="com.fresh.manager.pojo.shop.Group" resultMap="groupGoodsMap">
		select
    		a.`id`,
    		a.`group_name`,
    		a.`group_sn`,
    		a.`group_desc`,
    		a.`create_user_id`,
    		a.`create_time`,
    		c.`id` as gid,
			c.`name`,
			c.`primary_pic_url`,
			c.`retail_price`
    		
		from nideshop_group_goods b
		left join  nideshop_group a  
		on b.group_id = a.id 
		left join  nideshop_goods c 
		on b.goods_id = c.id 
		<where>
			<if test="id != null">
				AND a.id =#{id}
			</if>
		</where>
	</select>
  
</mapper>