<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fresh.manager.mapper.shop.GoodsMapper">
  <resultMap id="BaseResultMap" type="com.fresh.manager.pojo.shop.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="goods_brief" jdbcType="VARCHAR" property="goodsBrief" />
    <result column="is_on_sale" jdbcType="BIT" property="isOnSale" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="sort_order" jdbcType="SMALLINT" property="sortOrder" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="attribute_category" jdbcType="INTEGER" property="attributeCategory" />
    <result column="counter_price" jdbcType="DECIMAL" property="counterPrice" />
    <result column="extra_price" jdbcType="DECIMAL" property="extraPrice" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="goods_unit" jdbcType="VARCHAR" property="goodsUnit" />
    <result column="primary_pic_url" jdbcType="VARCHAR" property="primaryPicUrl" />
    <result column="list_pic_url" jdbcType="VARCHAR" property="listPicUrl" />
    <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
    <result column="sell_volume" jdbcType="INTEGER" property="sellVolume" />
    <result column="primary_product_id" jdbcType="INTEGER" property="primaryProductId" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="promotion_desc" jdbcType="VARCHAR" property="promotionDesc" />
    <result column="promotion_tag" jdbcType="VARCHAR" property="promotionTag" />
    <result column="app_exclusive_price" jdbcType="DECIMAL" property="appExclusivePrice" />
    <result column="is_app_exclusive" jdbcType="BIT" property="isAppExclusive" />
    <result column="is_limited" jdbcType="BIT" property="isLimited" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_dept_id" jdbcType="BIGINT" property="createUserDeptId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.fresh.manager.pojo.shop.Goods">
    <result column="goods_desc" jdbcType="LONGVARCHAR" property="goodsDesc" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, category_id, goods_sn, name, brand_id, goods_number, keywords, goods_brief, is_on_sale, 
    add_time, sort_order, is_delete, attribute_category, counter_price, extra_price, 
    is_new, goods_unit, primary_pic_url, list_pic_url, retail_price, sell_volume, primary_product_id, 
    unit_price, promotion_desc, promotion_tag, app_exclusive_price, is_app_exclusive, 
    is_limited, is_hot, market_price, create_user_id, update_user_id, update_time, create_user_dept_id
  </sql>
  <sql id="Blob_Column_List">
    goods_desc
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.fresh.manager.pojo.shop.GoodsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.fresh.manager.pojo.shop.GoodsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from nideshop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from nideshop_goods
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nideshop_goods
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.fresh.manager.pojo.shop.GoodsExample">
    delete from nideshop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fresh.manager.pojo.shop.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_goods (category_id, goods_sn, name, 
      brand_id, goods_number, keywords, 
      goods_brief, is_on_sale, add_time, 
      sort_order, is_delete, attribute_category, 
      counter_price, extra_price, is_new, 
      goods_unit, primary_pic_url, list_pic_url, 
      retail_price, sell_volume, primary_product_id, 
      unit_price, promotion_desc, promotion_tag, 
      app_exclusive_price, is_app_exclusive, is_limited, 
      is_hot, market_price, create_user_id, 
      update_user_id, update_time, create_user_dept_id, 
      goods_desc)
    values (#{categoryId,jdbcType=INTEGER}, #{goodsSn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{brandId,jdbcType=INTEGER}, #{goodsNumber,jdbcType=INTEGER}, #{keywords,jdbcType=VARCHAR}, 
      #{goodsBrief,jdbcType=VARCHAR}, #{isOnSale,jdbcType=BIT}, #{addTime,jdbcType=TIMESTAMP}, 
      #{sortOrder,jdbcType=SMALLINT}, #{isDelete,jdbcType=BIT}, #{attributeCategory,jdbcType=INTEGER}, 
      #{counterPrice,jdbcType=DECIMAL}, #{extraPrice,jdbcType=DECIMAL}, #{isNew,jdbcType=BIT}, 
      #{goodsUnit,jdbcType=VARCHAR}, #{primaryPicUrl,jdbcType=VARCHAR}, #{listPicUrl,jdbcType=VARCHAR}, 
      #{retailPrice,jdbcType=DECIMAL}, #{sellVolume,jdbcType=INTEGER}, #{primaryProductId,jdbcType=INTEGER}, 
      #{unitPrice,jdbcType=DECIMAL}, #{promotionDesc,jdbcType=VARCHAR}, #{promotionTag,jdbcType=VARCHAR}, 
      #{appExclusivePrice,jdbcType=DECIMAL}, #{isAppExclusive,jdbcType=BIT}, #{isLimited,jdbcType=BIT}, 
      #{isHot,jdbcType=BIT}, #{marketPrice,jdbcType=DECIMAL}, #{createUserId,jdbcType=BIGINT}, 
      #{updateUserId,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP}, #{createUserDeptId,jdbcType=BIGINT}, 
      #{goodsDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fresh.manager.pojo.shop.Goods">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into nideshop_goods
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="goodsSn != null">
        goods_sn,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="goodsNumber != null">
        goods_number,
      </if>
      <if test="keywords != null">
        keywords,
      </if>
      <if test="goodsBrief != null">
        goods_brief,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="attributeCategory != null">
        attribute_category,
      </if>
      <if test="counterPrice != null">
        counter_price,
      </if>
      <if test="extraPrice != null">
        extra_price,
      </if>
      <if test="isNew != null">
        is_new,
      </if>
      <if test="goodsUnit != null">
        goods_unit,
      </if>
      <if test="primaryPicUrl != null">
        primary_pic_url,
      </if>
      <if test="listPicUrl != null">
        list_pic_url,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="sellVolume != null">
        sell_volume,
      </if>
      <if test="primaryProductId != null">
        primary_product_id,
      </if>
      <if test="unitPrice != null">
        unit_price,
      </if>
      <if test="promotionDesc != null">
        promotion_desc,
      </if>
      <if test="promotionTag != null">
        promotion_tag,
      </if>
      <if test="appExclusivePrice != null">
        app_exclusive_price,
      </if>
      <if test="isAppExclusive != null">
        is_app_exclusive,
      </if>
      <if test="isLimited != null">
        is_limited,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createUserDeptId != null">
        create_user_dept_id,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="goodsSn != null">
        #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="keywords != null">
        #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="isOnSale != null">
        #{isOnSale,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BIT},
      </if>
      <if test="attributeCategory != null">
        #{attributeCategory,jdbcType=INTEGER},
      </if>
      <if test="counterPrice != null">
        #{counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="extraPrice != null">
        #{extraPrice,jdbcType=DECIMAL},
      </if>
      <if test="isNew != null">
        #{isNew,jdbcType=BIT},
      </if>
      <if test="goodsUnit != null">
        #{goodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="primaryPicUrl != null">
        #{primaryPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="listPicUrl != null">
        #{listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="retailPrice != null">
        #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellVolume != null">
        #{sellVolume,jdbcType=INTEGER},
      </if>
      <if test="primaryProductId != null">
        #{primaryProductId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="promotionDesc != null">
        #{promotionDesc,jdbcType=VARCHAR},
      </if>
      <if test="promotionTag != null">
        #{promotionTag,jdbcType=VARCHAR},
      </if>
      <if test="appExclusivePrice != null">
        #{appExclusivePrice,jdbcType=DECIMAL},
      </if>
      <if test="isAppExclusive != null">
        #{isAppExclusive,jdbcType=BIT},
      </if>
      <if test="isLimited != null">
        #{isLimited,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=BIT},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserDeptId != null">
        #{createUserDeptId,jdbcType=BIGINT},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fresh.manager.pojo.shop.GoodsExample" resultType="java.lang.Long">
    select count(*) from nideshop_goods
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update nideshop_goods
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.categoryId != null">
        category_id = #{record.categoryId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsSn != null">
        goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsNumber != null">
        goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="record.keywords != null">
        keywords = #{record.keywords,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsBrief != null">
        goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnSale != null">
        is_on_sale = #{record.isOnSale,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
      <if test="record.attributeCategory != null">
        attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
      </if>
      <if test="record.counterPrice != null">
        counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.extraPrice != null">
        extra_price = #{record.extraPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isNew != null">
        is_new = #{record.isNew,jdbcType=BIT},
      </if>
      <if test="record.goodsUnit != null">
        goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.primaryPicUrl != null">
        primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.listPicUrl != null">
        list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.retailPrice != null">
        retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.sellVolume != null">
        sell_volume = #{record.sellVolume,jdbcType=INTEGER},
      </if>
      <if test="record.primaryProductId != null">
        primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
      </if>
      <if test="record.unitPrice != null">
        unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.promotionDesc != null">
        promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.promotionTag != null">
        promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
      </if>
      <if test="record.appExclusivePrice != null">
        app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.isAppExclusive != null">
        is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
      </if>
      <if test="record.isLimited != null">
        is_limited = #{record.isLimited,jdbcType=BIT},
      </if>
      <if test="record.isHot != null">
        is_hot = #{record.isHot,jdbcType=BIT},
      </if>
      <if test="record.marketPrice != null">
        market_price = #{record.marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserDeptId != null">
        create_user_dept_id = #{record.createUserDeptId,jdbcType=BIGINT},
      </if>
      <if test="record.goodsDesc != null">
        goods_desc = #{record.goodsDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update nideshop_goods
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      extra_price = #{record.extraPrice,jdbcType=DECIMAL},
      is_new = #{record.isNew,jdbcType=BIT},
      goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
      primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
      list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      sell_volume = #{record.sellVolume,jdbcType=INTEGER},
      primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
      promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
      app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
      is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
      is_limited = #{record.isLimited,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_dept_id = #{record.createUserDeptId,jdbcType=BIGINT},
      goods_desc = #{record.goodsDesc,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update nideshop_goods
    set id = #{record.id,jdbcType=INTEGER},
      category_id = #{record.categoryId,jdbcType=INTEGER},
      goods_sn = #{record.goodsSn,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      goods_number = #{record.goodsNumber,jdbcType=INTEGER},
      keywords = #{record.keywords,jdbcType=VARCHAR},
      goods_brief = #{record.goodsBrief,jdbcType=VARCHAR},
      is_on_sale = #{record.isOnSale,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      sort_order = #{record.sortOrder,jdbcType=SMALLINT},
      is_delete = #{record.isDelete,jdbcType=BIT},
      attribute_category = #{record.attributeCategory,jdbcType=INTEGER},
      counter_price = #{record.counterPrice,jdbcType=DECIMAL},
      extra_price = #{record.extraPrice,jdbcType=DECIMAL},
      is_new = #{record.isNew,jdbcType=BIT},
      goods_unit = #{record.goodsUnit,jdbcType=VARCHAR},
      primary_pic_url = #{record.primaryPicUrl,jdbcType=VARCHAR},
      list_pic_url = #{record.listPicUrl,jdbcType=VARCHAR},
      retail_price = #{record.retailPrice,jdbcType=DECIMAL},
      sell_volume = #{record.sellVolume,jdbcType=INTEGER},
      primary_product_id = #{record.primaryProductId,jdbcType=INTEGER},
      unit_price = #{record.unitPrice,jdbcType=DECIMAL},
      promotion_desc = #{record.promotionDesc,jdbcType=VARCHAR},
      promotion_tag = #{record.promotionTag,jdbcType=VARCHAR},
      app_exclusive_price = #{record.appExclusivePrice,jdbcType=DECIMAL},
      is_app_exclusive = #{record.isAppExclusive,jdbcType=BIT},
      is_limited = #{record.isLimited,jdbcType=BIT},
      is_hot = #{record.isHot,jdbcType=BIT},
      market_price = #{record.marketPrice,jdbcType=DECIMAL},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_dept_id = #{record.createUserDeptId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fresh.manager.pojo.shop.Goods">
    update nideshop_goods
    <set>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="goodsSn != null">
        goods_sn = #{goodsSn,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null">
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="goodsNumber != null">
        goods_number = #{goodsNumber,jdbcType=INTEGER},
      </if>
      <if test="keywords != null">
        keywords = #{keywords,jdbcType=VARCHAR},
      </if>
      <if test="goodsBrief != null">
        goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      </if>
      <if test="isOnSale != null">
        is_on_sale = #{isOnSale,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=SMALLINT},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
      <if test="attributeCategory != null">
        attribute_category = #{attributeCategory,jdbcType=INTEGER},
      </if>
      <if test="counterPrice != null">
        counter_price = #{counterPrice,jdbcType=DECIMAL},
      </if>
      <if test="extraPrice != null">
        extra_price = #{extraPrice,jdbcType=DECIMAL},
      </if>
      <if test="isNew != null">
        is_new = #{isNew,jdbcType=BIT},
      </if>
      <if test="goodsUnit != null">
        goods_unit = #{goodsUnit,jdbcType=VARCHAR},
      </if>
      <if test="primaryPicUrl != null">
        primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="listPicUrl != null">
        list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
      </if>
      <if test="retailPrice != null">
        retail_price = #{retailPrice,jdbcType=DECIMAL},
      </if>
      <if test="sellVolume != null">
        sell_volume = #{sellVolume,jdbcType=INTEGER},
      </if>
      <if test="primaryProductId != null">
        primary_product_id = #{primaryProductId,jdbcType=INTEGER},
      </if>
      <if test="unitPrice != null">
        unit_price = #{unitPrice,jdbcType=DECIMAL},
      </if>
      <if test="promotionDesc != null">
        promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
      </if>
      <if test="promotionTag != null">
        promotion_tag = #{promotionTag,jdbcType=VARCHAR},
      </if>
      <if test="appExclusivePrice != null">
        app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
      </if>
      <if test="isAppExclusive != null">
        is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
      </if>
      <if test="isLimited != null">
        is_limited = #{isLimited,jdbcType=BIT},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=BIT},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserDeptId != null">
        create_user_dept_id = #{createUserDeptId,jdbcType=BIGINT},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.fresh.manager.pojo.shop.Goods">
    update nideshop_goods
    set category_id = #{categoryId,jdbcType=INTEGER},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      keywords = #{keywords,jdbcType=VARCHAR},
      goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      is_on_sale = #{isOnSale,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      sort_order = #{sortOrder,jdbcType=SMALLINT},
      is_delete = #{isDelete,jdbcType=BIT},
      attribute_category = #{attributeCategory,jdbcType=INTEGER},
      counter_price = #{counterPrice,jdbcType=DECIMAL},
      extra_price = #{extraPrice,jdbcType=DECIMAL},
      is_new = #{isNew,jdbcType=BIT},
      goods_unit = #{goodsUnit,jdbcType=VARCHAR},
      primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
      list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      sell_volume = #{sellVolume,jdbcType=INTEGER},
      primary_product_id = #{primaryProductId,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
      promotion_tag = #{promotionTag,jdbcType=VARCHAR},
      app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
      is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
      is_limited = #{isLimited,jdbcType=BIT},
      is_hot = #{isHot,jdbcType=BIT},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_dept_id = #{createUserDeptId,jdbcType=BIGINT},
      goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fresh.manager.pojo.shop.Goods">
    update nideshop_goods
    set category_id = #{categoryId,jdbcType=INTEGER},
      goods_sn = #{goodsSn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=INTEGER},
      goods_number = #{goodsNumber,jdbcType=INTEGER},
      keywords = #{keywords,jdbcType=VARCHAR},
      goods_brief = #{goodsBrief,jdbcType=VARCHAR},
      is_on_sale = #{isOnSale,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      sort_order = #{sortOrder,jdbcType=SMALLINT},
      is_delete = #{isDelete,jdbcType=BIT},
      attribute_category = #{attributeCategory,jdbcType=INTEGER},
      counter_price = #{counterPrice,jdbcType=DECIMAL},
      extra_price = #{extraPrice,jdbcType=DECIMAL},
      is_new = #{isNew,jdbcType=BIT},
      goods_unit = #{goodsUnit,jdbcType=VARCHAR},
      primary_pic_url = #{primaryPicUrl,jdbcType=VARCHAR},
      list_pic_url = #{listPicUrl,jdbcType=VARCHAR},
      retail_price = #{retailPrice,jdbcType=DECIMAL},
      sell_volume = #{sellVolume,jdbcType=INTEGER},
      primary_product_id = #{primaryProductId,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DECIMAL},
      promotion_desc = #{promotionDesc,jdbcType=VARCHAR},
      promotion_tag = #{promotionTag,jdbcType=VARCHAR},
      app_exclusive_price = #{appExclusivePrice,jdbcType=DECIMAL},
      is_app_exclusive = #{isAppExclusive,jdbcType=BIT},
      is_limited = #{isLimited,jdbcType=BIT},
      is_hot = #{isHot,jdbcType=BIT},
      market_price = #{marketPrice,jdbcType=DECIMAL},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_dept_id = #{createUserDeptId,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
  
   <resultMap id="BaseResultMap2" type="com.fresh.manager.pojo.shop.Goods">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="goods_sn" jdbcType="VARCHAR" property="goodsSn" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="goods_number" jdbcType="INTEGER" property="goodsNumber" />
    <result column="keywords" jdbcType="VARCHAR" property="keywords" />
    <result column="goods_brief" jdbcType="VARCHAR" property="goodsBrief" />
    <result column="is_on_sale" jdbcType="BIT" property="isOnSale" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="sort_order" jdbcType="SMALLINT" property="sortOrder" />
    <result column="is_delete" jdbcType="BIT" property="isDelete" />
    <result column="attribute_category" jdbcType="INTEGER" property="attributeCategory" />
    <result column="counter_price" jdbcType="DECIMAL" property="counterPrice" />
    <result column="extra_price" jdbcType="DECIMAL" property="extraPrice" />
    <result column="is_new" jdbcType="BIT" property="isNew" />
    <result column="goods_unit" jdbcType="VARCHAR" property="goodsUnit" />
    <result column="primary_pic_url" jdbcType="VARCHAR" property="primaryPicUrl" />
    <result column="list_pic_url" jdbcType="VARCHAR" property="listPicUrl" />
    <result column="retail_price" jdbcType="DECIMAL" property="retailPrice" />
    <result column="sell_volume" jdbcType="INTEGER" property="sellVolume" />
    <result column="primary_product_id" jdbcType="INTEGER" property="primaryProductId" />
    <result column="unit_price" jdbcType="DECIMAL" property="unitPrice" />
    <result column="promotion_desc" jdbcType="VARCHAR" property="promotionDesc" />
    <result column="promotion_tag" jdbcType="VARCHAR" property="promotionTag" />
    <result column="app_exclusive_price" jdbcType="DECIMAL" property="appExclusivePrice" />
    <result column="is_app_exclusive" jdbcType="BIT" property="isAppExclusive" />
    <result column="is_limited" jdbcType="BIT" property="isLimited" />
    <result column="is_hot" jdbcType="BIT" property="isHot" />
    <result column="market_price" jdbcType="DECIMAL" property="marketPrice" />
    <result column="create_user_id" jdbcType="BIGINT" property="createUserId" />
    <result column="update_user_id" jdbcType="BIGINT" property="updateUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_user_dept_id" jdbcType="BIGINT" property="createUserDeptId" />
    
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="attribute_category_name" jdbcType="VARCHAR" property="attributeCategoryName" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    
  </resultMap>
  
  
  <select id="queryList" parameterType="com.fresh.manager.pojo.shop.Goods" resultMap="BaseResultMap2">
        select 
        	a.*, 
        	b.name as category_name ,
        	c.name as attribute_category_name,
        	d.name as brand_name 
        from 
        	nideshop_goods a 
        left join nideshop_category b on a.category_id = b.id 
        left join nideshop_attribute_category c on a.attribute_category = c.id 
        left join nideshop_brand d on a.brand_id = d.id
        <where>
			<if test="name != null and name != ''">
	            AND a.name LIKE concat('%',#{name},'%')
	        </if>
	        <if test="isDelete != null ">
	        	AND a.is_Delete = #{isDelete}
	        </if>
		</where>
		order by a.id desc
   </select>
   
   
   
   <select id="listWhereNoInGroupByGroupId" resultMap="BaseResultMap" >
        select
	        nideshop_goods.id,
	        nideshop_goods.goods_sn,
	        nideshop_goods.name
        from nideshop_goods
        where 
         	id not in (
         		select goods_id from nideshop_group_goods 
         		where group_id = #{groupId}
         	)
        order by id desc
    </select>
    
    <select id="listWhereInGroupByGroupId" resultMap="BaseResultMap" >
        select
	        a.id,
	        a.goods_sn,
	        a.name
        from nideshop_goods a 
        right join nideshop_group_goods b
        on a.id = b.goods_id 
        where b.group_id= #{groupId}
        order by a.id desc
    </select>
    
    
</mapper>